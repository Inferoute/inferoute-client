name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # This is required for creating releases and uploading assets

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Update CHANGELOG.md
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          DATE=$(date +'%Y-%m-%d')
          
          # Read the current CHANGELOG.md
          if [ -f "CHANGELOG.md" ]; then
            # Simply replace [Unreleased] with the version number and date
            sed -i "s/## \[Unreleased\]/## [$VERSION] - $DATE/" CHANGELOG.md
            
            # Commit the updated CHANGELOG
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add CHANGELOG.md
            git commit -m "Update CHANGELOG.md for v$VERSION release [skip ci]"
            git push
          else
            echo "CHANGELOG.md not found. Skipping update."
          fi
          
      - name: Build binaries
        run: |
          # Create build directory
          mkdir -p build
          
          # Build for Linux amd64
          GOOS=linux GOARCH=amd64 go build -o build/inferoute-client-linux-amd64 ./cmd
          
          # Build for Linux arm64
          GOOS=linux GOARCH=arm64 go build -o build/inferoute-client-linux-arm64 ./cmd
          
          # Build for macOS amd64 (Intel)
          GOOS=darwin GOARCH=amd64 go build -o build/inferoute-client-darwin-amd64 ./cmd
          
          # Build for macOS arm64 (Apple Silicon)
          GOOS=darwin GOARCH=arm64 go build -o build/inferoute-client-darwin-arm64 ./cmd
          
          # Build for Windows amd64 (64-bit)
          GOOS=windows GOARCH=amd64 go build -o build/inferoute-client-windows-amd64.exe ./cmd
          
          # Build for Windows 386 (32-bit)
          GOOS=windows GOARCH=386 go build -o build/inferoute-client-windows-386.exe ./cmd
          
          # Create zip archives
          cd build
          zip -r inferoute-client-linux-amd64.zip inferoute-client-linux-amd64
          zip -r inferoute-client-linux-arm64.zip inferoute-client-linux-arm64
          zip -r inferoute-client-darwin-amd64.zip inferoute-client-darwin-amd64
          zip -r inferoute-client-darwin-arm64.zip inferoute-client-darwin-arm64
          zip -r inferoute-client-windows-amd64.zip inferoute-client-windows-amd64.exe
          zip -r inferoute-client-windows-386.zip inferoute-client-windows-386.exe
          cd ..
      
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/inferoute-client-linux-amd64.zip
            build/inferoute-client-linux-arm64.zip
            build/inferoute-client-darwin-amd64.zip
            build/inferoute-client-darwin-arm64.zip
            build/inferoute-client-windows-amd64.zip
            build/inferoute-client-windows-386.zip
          draft: false
          prerelease: false
          generate_release_notes: true
          body_path: ${{ github.workspace }}/CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
      
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: inferoute/client
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            latest
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=inferoute/inferoute-client:buildcache
          cache-to: type=registry,ref=inferoute/inferoute-client:buildcache,mode=max
